// Code generated by ent, DO NOT EDIT.

package pkce

const (
	// Label holds the string label denoting the pkce type in the database.
	Label = "pkce"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCode holds the string denoting the code field in the database.
	FieldCode = "code"
	// EdgeSession holds the string denoting the session edge name in mutations.
	EdgeSession = "session"
	// Table holds the table name of the pkce in the database.
	Table = "pkc_es"
	// SessionTable is the table that holds the session relation/edge.
	SessionTable = "pkc_es"
	// SessionInverseTable is the table name for the OAuthSession entity.
	// It exists in this package in order to avoid circular dependency with the "oauthsession" package.
	SessionInverseTable = "oauth_sessions"
	// SessionColumn is the table column denoting the session relation/edge.
	SessionColumn = "pkce_session"
)

// Columns holds all SQL columns for pkce fields.
var Columns = []string{
	FieldID,
	FieldCode,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "pkc_es"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"pkce_session",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
