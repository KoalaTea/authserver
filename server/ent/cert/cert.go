// Code generated by ent, DO NOT EDIT.

package cert

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the cert type in the database.
	Label = "cert"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldRevoked holds the string denoting the revoked field in the database.
	FieldRevoked = "revoked"
	// FieldPem holds the string denoting the pem field in the database.
	FieldPem = "pem"
	// FieldSerialNumber holds the string denoting the serial_number field in the database.
	FieldSerialNumber = "serial_number"
	// Table holds the table name of the cert in the database.
	Table = "certs"
)

// Columns holds all SQL columns for cert fields.
var Columns = []string{
	FieldID,
	FieldRevoked,
	FieldPem,
	FieldSerialNumber,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultRevoked holds the default value on creation for the "revoked" field.
	DefaultRevoked bool
)

// OrderOption defines the ordering options for the Cert queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByRevoked orders the results by the revoked field.
func ByRevoked(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldRevoked, opts...).ToFunc()
}

// ByPem orders the results by the pem field.
func ByPem(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPem, opts...).ToFunc()
}

// BySerialNumber orders the results by the serial_number field.
func BySerialNumber(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldSerialNumber, opts...).ToFunc()
}
