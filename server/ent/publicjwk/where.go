// Code generated by ent, DO NOT EDIT.

package publicjwk

import (
	"entgo.io/ent/dialect/sql"
	"github.com/koalatea/authserver/server/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldLTE(FieldID, id))
}

// Sid applies equality check predicate on the "sid" field. It's identical to SidEQ.
func Sid(v string) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldEQ(FieldSid, v))
}

// Kid applies equality check predicate on the "kid" field. It's identical to KidEQ.
func Kid(v string) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldEQ(FieldKid, v))
}

// Key applies equality check predicate on the "key" field. It's identical to KeyEQ.
func Key(v string) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldEQ(FieldKey, v))
}

// Issuer applies equality check predicate on the "issuer" field. It's identical to IssuerEQ.
func Issuer(v string) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldEQ(FieldIssuer, v))
}

// SidEQ applies the EQ predicate on the "sid" field.
func SidEQ(v string) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldEQ(FieldSid, v))
}

// SidNEQ applies the NEQ predicate on the "sid" field.
func SidNEQ(v string) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldNEQ(FieldSid, v))
}

// SidIn applies the In predicate on the "sid" field.
func SidIn(vs ...string) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldIn(FieldSid, vs...))
}

// SidNotIn applies the NotIn predicate on the "sid" field.
func SidNotIn(vs ...string) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldNotIn(FieldSid, vs...))
}

// SidGT applies the GT predicate on the "sid" field.
func SidGT(v string) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldGT(FieldSid, v))
}

// SidGTE applies the GTE predicate on the "sid" field.
func SidGTE(v string) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldGTE(FieldSid, v))
}

// SidLT applies the LT predicate on the "sid" field.
func SidLT(v string) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldLT(FieldSid, v))
}

// SidLTE applies the LTE predicate on the "sid" field.
func SidLTE(v string) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldLTE(FieldSid, v))
}

// SidContains applies the Contains predicate on the "sid" field.
func SidContains(v string) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldContains(FieldSid, v))
}

// SidHasPrefix applies the HasPrefix predicate on the "sid" field.
func SidHasPrefix(v string) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldHasPrefix(FieldSid, v))
}

// SidHasSuffix applies the HasSuffix predicate on the "sid" field.
func SidHasSuffix(v string) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldHasSuffix(FieldSid, v))
}

// SidEqualFold applies the EqualFold predicate on the "sid" field.
func SidEqualFold(v string) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldEqualFold(FieldSid, v))
}

// SidContainsFold applies the ContainsFold predicate on the "sid" field.
func SidContainsFold(v string) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldContainsFold(FieldSid, v))
}

// KidEQ applies the EQ predicate on the "kid" field.
func KidEQ(v string) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldEQ(FieldKid, v))
}

// KidNEQ applies the NEQ predicate on the "kid" field.
func KidNEQ(v string) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldNEQ(FieldKid, v))
}

// KidIn applies the In predicate on the "kid" field.
func KidIn(vs ...string) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldIn(FieldKid, vs...))
}

// KidNotIn applies the NotIn predicate on the "kid" field.
func KidNotIn(vs ...string) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldNotIn(FieldKid, vs...))
}

// KidGT applies the GT predicate on the "kid" field.
func KidGT(v string) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldGT(FieldKid, v))
}

// KidGTE applies the GTE predicate on the "kid" field.
func KidGTE(v string) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldGTE(FieldKid, v))
}

// KidLT applies the LT predicate on the "kid" field.
func KidLT(v string) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldLT(FieldKid, v))
}

// KidLTE applies the LTE predicate on the "kid" field.
func KidLTE(v string) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldLTE(FieldKid, v))
}

// KidContains applies the Contains predicate on the "kid" field.
func KidContains(v string) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldContains(FieldKid, v))
}

// KidHasPrefix applies the HasPrefix predicate on the "kid" field.
func KidHasPrefix(v string) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldHasPrefix(FieldKid, v))
}

// KidHasSuffix applies the HasSuffix predicate on the "kid" field.
func KidHasSuffix(v string) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldHasSuffix(FieldKid, v))
}

// KidEqualFold applies the EqualFold predicate on the "kid" field.
func KidEqualFold(v string) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldEqualFold(FieldKid, v))
}

// KidContainsFold applies the ContainsFold predicate on the "kid" field.
func KidContainsFold(v string) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldContainsFold(FieldKid, v))
}

// KeyEQ applies the EQ predicate on the "key" field.
func KeyEQ(v string) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldEQ(FieldKey, v))
}

// KeyNEQ applies the NEQ predicate on the "key" field.
func KeyNEQ(v string) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldNEQ(FieldKey, v))
}

// KeyIn applies the In predicate on the "key" field.
func KeyIn(vs ...string) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldIn(FieldKey, vs...))
}

// KeyNotIn applies the NotIn predicate on the "key" field.
func KeyNotIn(vs ...string) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldNotIn(FieldKey, vs...))
}

// KeyGT applies the GT predicate on the "key" field.
func KeyGT(v string) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldGT(FieldKey, v))
}

// KeyGTE applies the GTE predicate on the "key" field.
func KeyGTE(v string) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldGTE(FieldKey, v))
}

// KeyLT applies the LT predicate on the "key" field.
func KeyLT(v string) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldLT(FieldKey, v))
}

// KeyLTE applies the LTE predicate on the "key" field.
func KeyLTE(v string) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldLTE(FieldKey, v))
}

// KeyContains applies the Contains predicate on the "key" field.
func KeyContains(v string) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldContains(FieldKey, v))
}

// KeyHasPrefix applies the HasPrefix predicate on the "key" field.
func KeyHasPrefix(v string) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldHasPrefix(FieldKey, v))
}

// KeyHasSuffix applies the HasSuffix predicate on the "key" field.
func KeyHasSuffix(v string) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldHasSuffix(FieldKey, v))
}

// KeyEqualFold applies the EqualFold predicate on the "key" field.
func KeyEqualFold(v string) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldEqualFold(FieldKey, v))
}

// KeyContainsFold applies the ContainsFold predicate on the "key" field.
func KeyContainsFold(v string) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldContainsFold(FieldKey, v))
}

// IssuerEQ applies the EQ predicate on the "issuer" field.
func IssuerEQ(v string) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldEQ(FieldIssuer, v))
}

// IssuerNEQ applies the NEQ predicate on the "issuer" field.
func IssuerNEQ(v string) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldNEQ(FieldIssuer, v))
}

// IssuerIn applies the In predicate on the "issuer" field.
func IssuerIn(vs ...string) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldIn(FieldIssuer, vs...))
}

// IssuerNotIn applies the NotIn predicate on the "issuer" field.
func IssuerNotIn(vs ...string) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldNotIn(FieldIssuer, vs...))
}

// IssuerGT applies the GT predicate on the "issuer" field.
func IssuerGT(v string) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldGT(FieldIssuer, v))
}

// IssuerGTE applies the GTE predicate on the "issuer" field.
func IssuerGTE(v string) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldGTE(FieldIssuer, v))
}

// IssuerLT applies the LT predicate on the "issuer" field.
func IssuerLT(v string) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldLT(FieldIssuer, v))
}

// IssuerLTE applies the LTE predicate on the "issuer" field.
func IssuerLTE(v string) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldLTE(FieldIssuer, v))
}

// IssuerContains applies the Contains predicate on the "issuer" field.
func IssuerContains(v string) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldContains(FieldIssuer, v))
}

// IssuerHasPrefix applies the HasPrefix predicate on the "issuer" field.
func IssuerHasPrefix(v string) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldHasPrefix(FieldIssuer, v))
}

// IssuerHasSuffix applies the HasSuffix predicate on the "issuer" field.
func IssuerHasSuffix(v string) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldHasSuffix(FieldIssuer, v))
}

// IssuerEqualFold applies the EqualFold predicate on the "issuer" field.
func IssuerEqualFold(v string) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldEqualFold(FieldIssuer, v))
}

// IssuerContainsFold applies the ContainsFold predicate on the "issuer" field.
func IssuerContainsFold(v string) predicate.PublicJWK {
	return predicate.PublicJWK(sql.FieldContainsFold(FieldIssuer, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.PublicJWK) predicate.PublicJWK {
	return predicate.PublicJWK(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.PublicJWK) predicate.PublicJWK {
	return predicate.PublicJWK(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.PublicJWK) predicate.PublicJWK {
	return predicate.PublicJWK(sql.NotPredicates(p))
}
